<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans 
             http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/jee 
             http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
        http://www.springframework.org/schema/util 
        	http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
             http://www.springframework.org/schema/util/spring-util-3.2.xsd
        http://www.springframework.org/schema/aop 
             http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
        http://www.springframework.org/schema/tx 
             http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
        http://www.springframework.org/schema/context 
             http://www.springframework.org/schema/context/spring-context-3.2.xsd
                      http://www.springframework.org/schema/jdbc
         http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
        http://www.springframework.org/schema/mvc 
             http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd"
	default-lazy-init="true">
	
	<!--import resource="tools-config.xml" /-->
	
	<!-- ========================= DATASOURCE DEFINITION ========================= -->

	<!-- Configurer that replaces ${...} placeholders with values from a properties 
		file -->
	<!-- (in this case, JDBC-related settings for the dataSource definition 
		below) -->
	<context:property-placeholder location="classpath:spring/${ENV_SYSTEM:dev}/jdbc.properties" />

	<!-- DataSource configuration for Tomcat JDBC -->
	<bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource"
		p:driverClassName="${jdbc.driverClassName}" p:url="${jdbc.url}"
		p:username="${jdbc.username}" p:password="${jdbc.password}"
		p:maxActive="8" p:initialSize="8" />

	<!-- JNDI DataSource for JEE environments -->
	<!-- <jee:jndi-lookup id="dataSource" jndi-name="java:comp/env/jdbc/petclinic"/> -->

	<!-- Database initializer. If any of the script fails, the initialization 
		stops. -->
	<!-- As an alternative, for embedded databases see <jdbc:embedded-database/>. -->
	<jdbc:initialize-database data-source="dataSource">
		<jdbc:script location="${jdbc.initLocation}" />
		<jdbc:script location="${jdbc.dataLocation}" />
	</jdbc:initialize-database>

	<context:component-scan base-package="uk.commonline" />

	<context:annotation-config />

	<bean id="weatherEmf"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<!--property name="persistenceUnitName" value="weatherpu" /-->
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan"
			value="uk.commonline.weather.model,uk.commonline.data.model" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"
				p:database="${jpa.database}" p:showSql="${jpa.showSql}" />
		</property>
		<property name="jpaProperties">
			<props>
				<!--prop key="hibernate.hbm2ddl.auto">create-drop</prop-->
				<prop key="hibernate.dialect">org.hibernate.dialect.HSQLDialect</prop>
				<!--prop key="hibernate.show_sql">false</prop-->
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.transaction.factory_class">org.hibernate.transaction.JDBCTransactionFactory
				</prop>
				<prop key="hibernate.connection.pool_size">0</prop>
				<prop key="hibernate.connection.autocommit">true</prop>
				<prop key="hibernate.jdbc.batch_size">0</prop>
				<prop key="hibernate.current_session_context_class">thread</prop>
				<!--prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory</prop> 
					<prop key="hibernate.cache.use_second_level_cache">true</prop> <prop key="hibernate.cache.use_query_cache">false</prop -->
			</props>
		</property>
	</bean>

	<!--bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource"> 
		<property name="driverClassName" value="org.hsqldb.jdbcDriver" /> <property 
		name="url" value="jdbc:hsqldb:data/weather" /> <property name="username" 
		value="sa" /> <property name="password" value="" /> </bean -->

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="weatherEmf" />
	</bean>

	<tx:annotation-driven />

	<bean id="persistenceExceptionTranslationPostProcessor"
		class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />

	<bean id="locationDAO" class="uk.commonline.weather.persist.JpaLocationDAO">
	</bean>

	<bean id="weatherDAO" class="uk.commonline.weather.persist.JpaWeatherDAO">
	</bean>

</beans>